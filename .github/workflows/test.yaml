name: CD - Test

on:
  push:
    branches:
      - test

permissions:
  contents: write

jobs:
  # windows-build:
  #   name: Build on Windows
  #   runs-on: windows-latest
  #   steps:
  #     - name: Repo checkout
  #       uses: actions/checkout@v3

  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"
  #         cache: "yarn"

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Build executable
  #       run: yarn build:win

  #     - name: Upload executable
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Windows Setup.zip
  #         path: ./dist/*.exe

  linux-build:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Repo checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build executable
        run: yarn build:linux

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: Linux Setup.zip
          path: ./dist/*.deb

      - name: Download executable
        uses: actions/download-artifact@v3
        with:
          name: Linux Setup.zip

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}-${{ github.run_number }}
          generate_release_notes: true

      - name: ls -R
        run: ls -R

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Linux Setup.zip
          asset_name: Linux Setup ${{ github.ref_name }}.zip
          asset_content_type: application/zip

  # macos-build:
  #   name: Build on MacOS
  #   runs-on: macos-latest
  #   steps:
  #     - name: Repo checkout
  #       uses: actions/checkout@v3

  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"
  #         cache: "yarn"

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Build executable
  #       run: yarn build:mac

  #     - name: Upload executable
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: MacOS Setup.zip
  #         path: ./dist/*.dmg
